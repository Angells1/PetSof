/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controllers.ExcelController;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.IOException;
import static java.lang.Thread.sleep;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;

/**
 *
 * @author gabri
 */
public final class Show extends javax.swing.JFrame {
                          int cont = 1;
  //  int conta = 1;
                          
    int linhaa;
    boolean isNext = true;
    boolean isPrev = true;
    
    /**
     * Creates new form Show
     * @throws java.io.IOException
     * @throws jxl.read.biff.BiffException
     */
    public Show() throws IOException, BiffException {
        initComponents();
        if(cont <= 1){

        previousBtn.setEnabled(false);
        
    }
      pagLabel.setText(Integer.toString(cont));

   
        
                  planEx();

             // getContentPane().setBackground(new Color(45, 50, 51));

    getContentPane().setBackground(new Color(43, 48, 47));




               
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jSlider1 = new javax.swing.JSlider();
        nomeField = new javax.swing.JTextField();
        nomeDonoF = new javax.swing.JTextField();
        racaField = new javax.swing.JTextField();
        permanenciaField = new javax.swing.JTextField();
        idadeField = new javax.swing.JTextField();
        contador = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        nextBtn = new javax.swing.JButton();
        previousBtn = new javax.swing.JButton();
        pagLabel = new javax.swing.JLabel();
        prova = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        loadTxt = new javax.swing.JLabel();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nomeField.setBackground(new java.awt.Color(116, 123, 125));
        nomeField.setForeground(new java.awt.Color(192, 196, 195));
        nomeField.setBorder(null);
        nomeField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nomeFieldMouseEntered(evt);
            }
        });
        nomeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeFieldActionPerformed(evt);
            }
        });

        nomeDonoF.setEditable(false);
        nomeDonoF.setBackground(new java.awt.Color(116, 123, 125));
        nomeDonoF.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        nomeDonoF.setForeground(new java.awt.Color(192, 196, 195));
        nomeDonoF.setBorder(null);

        racaField.setEditable(false);
        racaField.setBackground(new java.awt.Color(116, 123, 125));
        racaField.setForeground(new java.awt.Color(192, 196, 195));
        racaField.setBorder(null);

        permanenciaField.setEditable(false);
        permanenciaField.setBackground(new java.awt.Color(116, 123, 125));
        permanenciaField.setForeground(new java.awt.Color(192, 196, 195));
        permanenciaField.setBorder(null);

        idadeField.setEditable(false);
        idadeField.setBackground(new java.awt.Color(116, 123, 125));
        idadeField.setForeground(new java.awt.Color(192, 196, 195));
        idadeField.setBorder(null);

        contador.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        contador.setForeground(new java.awt.Color(192, 196, 195));
        contador.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        contador.setText("0");

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(192, 196, 195));
        jLabel2.setText("Animal");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(192, 196, 195));
        jLabel3.setText("Nome dono");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(192, 196, 195));
        jLabel4.setText("Raça do animal");

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(192, 196, 195));
        jLabel5.setText("Tempo de permanência");

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(192, 196, 195));
        jLabel6.setText("Idade do animal");

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(192, 196, 195));
        jLabel8.setText("Animais hospedados");

        nextBtn.setText(">");
        nextBtn.setFocusable(false);
        nextBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextBtnMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                nextBtnMousePressed(evt);
            }
        });
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });

        previousBtn.setText("<");
        previousBtn.setFocusable(false);
        previousBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                previousBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                previousBtnMouseEntered(evt);
            }
        });
        previousBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousBtnActionPerformed(evt);
            }
        });

        pagLabel.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        pagLabel.setForeground(new java.awt.Color(192, 196, 195));
        pagLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        prova.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jProgressBar1.setForeground(new java.awt.Color(51, 255, 51));
        jProgressBar1.setStringPainted(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6)
                        .addComponent(jLabel4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nomeDonoF)
                            .addComponent(racaField)
                            .addComponent(permanenciaField)
                            .addComponent(idadeField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nomeField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addComponent(jLabel3)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(previousBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nextBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pagLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(181, 181, 181)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(394, 394, 394)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(26, 26, 26))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(prova, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(60, 60, 60))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(contador, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(loadTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(91, 91, 91)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(71, 71, 71)
                        .addComponent(prova, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel7))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nomeDonoF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(contador, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nomeField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(8, 8, 8)
                        .addComponent(racaField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(permanenciaField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idadeField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(previousBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nextBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pagLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(loadTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jProgressBar1.setVisible(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nomeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeFieldActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_nomeFieldActionPerformed

    private void nomeFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nomeFieldMouseEntered
        // TODO add your handling code here:

    }//GEN-LAST:event_nomeFieldMouseEntered

    private void nextBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextBtnMouseClicked
        // TODO add your handling code here:
        
                  previousBtn.setEnabled(true);
                do{
                      
                             next();
                  } while(isNext == false);
              

      
      //  cont++;

        
                              try {
                                  planEx();
                              } catch (IOException ex) {
                                  Logger.getLogger(Show.class.getName()).log(Level.SEVERE, null, ex);
                                  
                              } catch (BiffException ex) {
                                  Logger.getLogger(Show.class.getName()).log(Level.SEVERE, null, ex);
                              }
              
   
    }//GEN-LAST:event_nextBtnMouseClicked

    private void nextBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextBtnMousePressed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_nextBtnMousePressed

    private void previousBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previousBtnMouseClicked
        // TODO add your handling code here:
        nextBtn.setEnabled(true);
     switch (cont){
            case 1:
           isPrev = false;
            previousBtn.setEnabled(false);
            
           break;
            default:
                       previous();
                 break;
        }
   
      
   
              try {
                  planExVolta();
              } catch (IOException ex) {
                  Logger.getLogger(Show.class.getName()).log(Level.SEVERE, null, ex);
              } catch (BiffException ex) {
                  Logger.getLogger(Show.class.getName()).log(Level.SEVERE, null, ex);
              }
            
            
            
        

        
        
    }//GEN-LAST:event_previousBtnMouseClicked

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        // TODO add your handling code here:
        
if(cont != 0){
        new Thread(){
            public void run(){
                
                for(int i = 0; i < 101; i++){
                    
                    try{
                                     jProgressBar1.setVisible(true);
                        sleep(2);
                        jProgressBar1.setValue(i);
                        if(jProgressBar1.getValue() >= 5 && jProgressBar1.getValue() <= 25 ){
                            loadTxt.setText("Carregando...");
                            
                            
                        }else if(jProgressBar1.getValue() <= 75){
                            loadTxt.setText("Abrindo tabelas...");
                            
                        }else if(jProgressBar1.getValue() == 100){
                            jProgressBar1.setValue(0);
                                loadTxt.setText("");
                        }             jProgressBar1.setVisible(false);
                    }catch(InterruptedException ex){
                        
                        
                    }
                    
                }
                
            }
            
        }.start();
}  
        
    }//GEN-LAST:event_nextBtnActionPerformed

    private void previousBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previousBtnMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_previousBtnMouseEntered

    private void previousBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousBtnActionPerformed
        // TODO add your handling code here:
        if(cont != 0){
        new Thread(){
            public void run(){
                
                for(int i = 0; i < 101; i++){
                    
                    try{
                                     jProgressBar1.setVisible(true);
                        sleep(2);
                        jProgressBar1.setValue(i);
                        if(jProgressBar1.getValue() >= 5 && jProgressBar1.getValue() <= 25 ){
                            loadTxt.setText("Carregando...");
                            
                            
                        }else if(jProgressBar1.getValue() <= 75){
                            loadTxt.setText("Abrindo tabelas...");
                            
                        }else if(jProgressBar1.getValue() == 100){
                            jProgressBar1.setValue(0);
                                loadTxt.setText("");
                        }
                                     jProgressBar1.setVisible(false);
                    }catch(InterruptedException ex){
                        
                        
                    }
                    
                }
                
            }
            
        }.start();
}  
    }//GEN-LAST:event_previousBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                    //javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Show.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Show.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Show.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Show.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Show().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Show.class.getName()).log(Level.SEVERE, null, ex);
       
                } catch (BiffException ex) {
                    Logger.getLogger(Show.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel contador;
    private javax.swing.JTextField idadeField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JLabel loadTxt;
    private javax.swing.JButton nextBtn;
    private javax.swing.JTextField nomeDonoF;
    private javax.swing.JTextField nomeField;
    private javax.swing.JLabel pagLabel;
    private javax.swing.JTextField permanenciaField;
    private javax.swing.JButton previousBtn;
    private javax.swing.JLabel prova;
    private javax.swing.JTextField racaField;
    // End of variables declaration//GEN-END:variables


    
    
    
    
    public void planEx() throws IOException, BiffException{
 
        ExcelController ex = new ExcelController();
      
        ArrayList<String> Ar = new ArrayList();
        
          ex.setArquivo(new File("peeet.xls"));     // caminho do arquivo
     
                ex.setPlanilha(Workbook.getWorkbook(ex.getArquivo())) ;   // instancia a planilha
 
                    Sheet aba = ex.getPlanilha().getSheet(0);         //guardando as abas da planilha
                      // Sheet[] abas = ex.getPlanilha().getSheets();  
                      
                    int linhas = aba.getRows();
          
                    int colunas = aba.getColumns();
                      linhaa = colunas;
           
                       //pega o numero de indices da planilha
                  /*  for (int g = 1; g <= linhas; g++){
                        
                        Cell ind = aba.getCell(0,g);
                      //  indice[g] = Integer.parseInt(ind.getContents());

                     
                    }*/
                  System.out.println(linhas);
                           System.out.println(colunas);
         ArrayList<Integer> indice = new ArrayList();
                           
                           if(cont < linhas){
     
                                    nextBtn.setEnabled(true);
                  for(int f = 0; f < colunas; f++){
                      
                                    ex.getMatrizGeral().add( new ArrayList<>());
                  }
                  
                    for ( int i = 0; i < colunas; i++ ) {
// seu Objeto é a classe que representa o objeto q vc ta armazenando no ARrayList
              
                           for(int j = 0; j < linhas; j++){
                               
         
                            
                               Cell a1 = aba.getCell(i, j);
                           
                         
                               String as1 = a1.getContents();
                 
                                 
                             
                                     
                                     
                               
                                   ex.getMatrizGeral().get(i).add(as1);

                               
                           }
}
                    
  
                    for(int o = 0; o < colunas; o++){
                        
                
                        for(int l = 0; l < cont+1; l++){
                            
                         //   if(o ==0){
                            
                                if(l > 0){
                            
                            switch(o){
                                case 1:
                                    nomeDonoF.setText((String) ex.getMatrizGeral().get(o).get(l));
                                break;
                                
                                case 2:
                                     nomeField.setText((String) ex.getMatrizGeral().get(o).get(l));
                                break;
                                
                                case 3:
                                    racaField.setText((String) ex.getMatrizGeral().get(o).get(l));
                            
                               break;
                               
                                case 4:
                                    permanenciaField.setText((String) ex.getMatrizGeral().get(o).get(l));
                                    break;
                                    
                                case 5:
                                    idadeField.setText((String) ex.getMatrizGeral().get(o).get(l));
                                    break;
                            }    
                     
                            
                            }
                        //    }
                        }
                        
                      
                    }
                     
                        
                              ex.getPlanilha().close();
                           } if(cont == linhas-1 )  {
                               
                             nextBtn.setEnabled(false);
                                               isNext = false;
                               JOptionPane.showMessageDialog(this, "Numero de páginas excedido");
                      
                         
                           }
                 
  contador.setText(Integer.toString(linhas-1));
  
     



           
    }
    
       public void planExVolta() throws IOException, BiffException{
             
        ExcelController ex = new ExcelController();
      
        ArrayList<String> Ar = new ArrayList();
        
          ex.setArquivo(new File("peeet.xls"));     // caminho do arquivo
     
                ex.setPlanilha(Workbook.getWorkbook(ex.getArquivo())) ;   // instancia a planilha
 
                    Sheet aba = ex.getPlanilha().getSheet(0);         //guardando as abas da planilha
                      // Sheet[] abas = ex.getPlanilha().getSheets();  
                      
                    int linhas = aba.getRows();
          
                    int colunas = aba.getColumns();
                      linhaa = colunas;
          
                       //pega o numero de indices da planilha
                  /*  for (int g = 1; g <= linhas; g++){
                        
                        Cell ind = aba.getCell(0,g);
                      //  indice[g] = Integer.parseInt(ind.getContents());

                     
                    }*/
                  System.out.println(linhas);
                           System.out.println(colunas);
                           
               if(cont >= 1){
                     
                           
                  for(int f = 0; f < colunas; f++){
                      
                                    ex.getMatrizGeral().add( new ArrayList<>());
                  }
                  
                    for ( int i = 0; i < colunas; i++ ) {
// seu Objeto é a classe que representa o objeto q vc ta armazenando no ARrayList
           
                           for(int j = 0; j < linhas; j++){
                               
                            
                               
                               Cell a1 = aba.getCell(i, j);
                               
                               String as1 = a1.getContents();
                               
                                   ex.getMatrizGeral().get(i).add(as1);
                               
                      
                           }
}
                    
  
                    for(int o = 0; o < colunas; o++){
                        

                        for(int l = cont; l > cont - 1; --l){
                            
                           // if(o >0){
                            
                         
                           if(l > 0){
                               
                           
                        
                              
                            
                            switch(o){
                                case 1:
                                    nomeDonoF.setText((String) ex.getMatrizGeral().get(o).get(l));
                                break;
                                
                                case 2:
                                     nomeField.setText((String) ex.getMatrizGeral().get(o).get(l));
                                break;
                                
                                case 3:
                                    racaField.setText((String) ex.getMatrizGeral().get(o).get(l));
                            
                               break;
                               
                                case 4:
                                    permanenciaField.setText((String) ex.getMatrizGeral().get(o).get(l));
                                    break;
                                    
                                case 5:
                                    idadeField.setText((String) ex.getMatrizGeral().get(o).get(l));
                              
                            }    
                     
                           }else{
                                 switch(o){
                                case 1:
                                    nomeDonoF.setText((String) ex.getMatrizGeral().get(o).get(1));
                                break;
                                
                                case 2:
                                     nomeField.setText((String) ex.getMatrizGeral().get(o).get(1));
                                break;
                                
                                case 3:
                                    racaField.setText((String) ex.getMatrizGeral().get(o).get(1));
                            
                               break;
                               
                                case 4:
                                    permanenciaField.setText((String) ex.getMatrizGeral().get(o).get(1));
                                    break;
                                    
                                case 5:
                                    idadeField.setText((String) ex.getMatrizGeral().get(o).get(1));
                              
                            } 
                               
                           }
                           
                            
                            //}
                        }
        
                    
                    
                    }
                    
     


                         
                              ex.getPlanilha().close();
                           } else{
                   
                   //previousBtn.setEnabled(false);
                   //isPrev = false;
                   
               }
              
                               
                   
                 
 // contador.setText(Integer.toString(linhas + 1));
    

    }
    
    public void next(){
        


        cont++;
    pagLabel.setText(Integer.toString(cont));
    previousBtn.setEnabled(true);
         isPrev = true;

        
    }

public void previous (){

    cont--;
  pagLabel.setText(Integer.toString(cont));
        nextBtn.setEnabled(true);
isNext = true;
    
  
    
    
    
}


}
